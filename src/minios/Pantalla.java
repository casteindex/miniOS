/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package minios;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author Alejandro
 */
public class Pantalla extends javax.swing.JFrame {

    /**
     * Creates new form Pantalla
     */
    public Pantalla() {
        initComponents();

        /* Cargar el archivo binario que contiene toda la información del
        sistema: la lista de todos los usuarios y su información */
        this.usuarios = loadUserFile();
        System.out.println(usuarios);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_editor = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_editor = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jmi_abrirArchivo = new javax.swing.JMenuItem();
        jmi_guardarArchivo = new javax.swing.JMenuItem();
        jmi_guardarArchivoComo = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jmi_fuenteEditor = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jmi_informacionEditor = new javax.swing.JMenuItem();
        jd_explorador = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_explorador = new javax.swing.JTree();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmi_nuevoNodo1 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jmi_cambiarNombreNodo1 = new javax.swing.JMenuItem();
        jmi_eliminarNodo1 = new javax.swing.JMenuItem();
        jd_escritorio = new javax.swing.JDialog();
        btn_abrirExplorador = new javax.swing.JButton();
        btn_abrirEditor = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmi_cerrarSesion = new javax.swing.JMenuItem();
        jmi_agregarUsuario = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmi_configurarSistema = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jmi_infoSistema = new javax.swing.JMenuItem();
        jd_agregarUsuario = new javax.swing.JDialog();
        chk_admin = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_nuevoUsuarioNombre = new javax.swing.JTextField();
        txt_nuevoUsuarioContrasena = new javax.swing.JTextField();
        btn_crearUsuario = new javax.swing.JButton();
        jd_informacionSistema = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_usuarios = new javax.swing.JTable();
        btn_editarUsuario = new javax.swing.JButton();
        jd_editarUsuario = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_nombreEditar = new javax.swing.JTextField();
        txt_contrasenaEditar = new javax.swing.JTextField();
        btn_guardarCambiosUsuario = new javax.swing.JButton();
        btn_eliminarUsuario = new javax.swing.JButton();
        jpm_explorador = new javax.swing.JPopupMenu();
        jmi_nuevoNodo = new javax.swing.JMenuItem();
        jmi_eliminarNodo = new javax.swing.JMenuItem();
        jmi_cambiarNombreNodo = new javax.swing.JMenuItem();
        jd_configuracionEscritorio = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btn_guardarFuenteEscritorio = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txt_nombreFuenteEscritorio = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jcb_estiloFuenteEscritorio = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        btn_desktopColor = new javax.swing.JButton();
        txt_tamañoLetraEscritorio = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btn_llenarDefaultFuente = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        btn_cambiarMenuBarColor = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        btn_cambiarFondoDePantalla = new javax.swing.JButton();
        jd_configuracionEditor = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        txt_nombreFuenteEditor = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jcb_estiloFuenteEditor = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        txt_tamañoLetraEditor = new javax.swing.JTextField();
        btn_llenarDefaultEditorFont = new javax.swing.JButton();
        btn_guardarFuenteEditor = new javax.swing.JButton();
        btn_editorColor = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jd_loginLogout = new javax.swing.JDialog();
        lbl_iniciandoCerrando = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        lbl_loadUserInfo = new javax.swing.JLabel();
        txt_loginConstrasena = new javax.swing.JTextField();
        btn_login = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_loginUsuario = new javax.swing.JTextField();

        jd_editor.setTitle("Editor de Texto");
        jd_editor.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jd_editorWindowClosing(evt);
            }
        });

        txt_editor.setColumns(20);
        txt_editor.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        txt_editor.setRows(5);
        jScrollPane1.setViewportView(txt_editor);

        jMenuBar2.setOpaque(true);

        jMenu3.setText("Archivo");
        jMenu3.setOpaque(true);

        jmi_abrirArchivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmi_abrirArchivo.setText("Abrir...");
        jmi_abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_abrirArchivoActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_abrirArchivo);

        jmi_guardarArchivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmi_guardarArchivo.setText("Guardar");
        jmi_guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_guardarArchivoActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_guardarArchivo);

        jmi_guardarArchivoComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmi_guardarArchivoComo.setText("Guardar como...");
        jmi_guardarArchivoComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_guardarArchivoComoActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_guardarArchivoComo);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Formato");
        jMenu4.setOpaque(true);

        jmi_fuenteEditor.setText("Fuente...");
        jmi_fuenteEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_fuenteEditorActionPerformed(evt);
            }
        });
        jMenu4.add(jmi_fuenteEditor);

        jMenuBar2.add(jMenu4);

        jMenu5.setText("Ayuda");
        jMenu5.setOpaque(true);

        jmi_informacionEditor.setText("Aceca del Editor");
        jmi_informacionEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_informacionEditorActionPerformed(evt);
            }
        });
        jMenu5.add(jmi_informacionEditor);

        jMenuBar2.add(jMenu5);

        jd_editor.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout jd_editorLayout = new javax.swing.GroupLayout(jd_editor.getContentPane());
        jd_editor.getContentPane().setLayout(jd_editorLayout);
        jd_editorLayout.setHorizontalGroup(
            jd_editorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
        );
        jd_editorLayout.setVerticalGroup(
            jd_editorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        jd_explorador.setTitle("Explorador de Archivos");
        jd_explorador.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jd_exploradorWindowClosing(evt);
            }
        });

        jt_explorador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_exploradorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_explorador);

        jMenuBar3.setOpaque(true);

        jMenu2.setText("Nuevo");
        jMenu2.setOpaque(true);

        jmi_nuevoNodo1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmi_nuevoNodo1.setText("Nuevo nodo");
        jmi_nuevoNodo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_nuevoNodo1ActionPerformed(evt);
            }
        });
        jMenu2.add(jmi_nuevoNodo1);

        jMenuBar3.add(jMenu2);

        jMenu6.setText("Edit");
        jMenu6.setOpaque(true);

        jmi_cambiarNombreNodo1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmi_cambiarNombreNodo1.setText("Cambiar nombre");
        jmi_cambiarNombreNodo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cambiarNombreNodo1ActionPerformed(evt);
            }
        });
        jMenu6.add(jmi_cambiarNombreNodo1);

        jmi_eliminarNodo1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jmi_eliminarNodo1.setText("Eliminar");
        jmi_eliminarNodo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarNodo1ActionPerformed(evt);
            }
        });
        jMenu6.add(jmi_eliminarNodo1);

        jMenuBar3.add(jMenu6);

        jd_explorador.setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout jd_exploradorLayout = new javax.swing.GroupLayout(jd_explorador.getContentPane());
        jd_explorador.getContentPane().setLayout(jd_exploradorLayout);
        jd_exploradorLayout.setHorizontalGroup(
            jd_exploradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );
        jd_exploradorLayout.setVerticalGroup(
            jd_exploradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
        );

        jd_escritorio.setPreferredSize(new java.awt.Dimension(800, 550));
        jd_escritorio.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jd_escritorioWindowClosing(evt);
            }
        });

        btn_abrirExplorador.setText("explorador");
        btn_abrirExplorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrirExploradorActionPerformed(evt);
            }
        });

        btn_abrirEditor.setText("editor");
        btn_abrirEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrirEditorActionPerformed(evt);
            }
        });

        jMenuBar1.setOpaque(true);

        jMenu1.setText("Inicio");
        jMenu1.setOpaque(true);

        jmi_cerrarSesion.setText("Cerrar sesión");
        jmi_cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cerrarSesionActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_cerrarSesion);

        jmi_agregarUsuario.setText("Agregar usuario...");
        jmi_agregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_agregarUsuario);
        jMenu1.add(jSeparator1);

        jmi_configurarSistema.setText("Configuración...");
        jmi_configurarSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_configurarSistemaActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_configurarSistema);
        jMenu1.add(jSeparator2);

        jmi_infoSistema.setText("Información del Sistema...");
        jmi_infoSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_infoSistemaActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_infoSistema);

        jMenuBar1.add(jMenu1);

        jd_escritorio.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jd_escritorioLayout = new javax.swing.GroupLayout(jd_escritorio.getContentPane());
        jd_escritorio.getContentPane().setLayout(jd_escritorioLayout);
        jd_escritorioLayout.setHorizontalGroup(
            jd_escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_escritorioLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jd_escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_abrirExplorador)
                    .addComponent(btn_abrirEditor))
                .addContainerGap(635, Short.MAX_VALUE))
        );
        jd_escritorioLayout.setVerticalGroup(
            jd_escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_escritorioLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(btn_abrirExplorador)
                .addGap(39, 39, 39)
                .addComponent(btn_abrirEditor)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        jd_agregarUsuario.setTitle("Agregar Nuevo Usuario");

        chk_admin.setText("El nuevo usuario tiene permisos de Administrador");

        jLabel4.setText("Nombre de Usuario:");

        jLabel5.setText("Contraseña:");

        btn_crearUsuario.setText("Crear Usuario");
        btn_crearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_crearUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_agregarUsuarioLayout = new javax.swing.GroupLayout(jd_agregarUsuario.getContentPane());
        jd_agregarUsuario.getContentPane().setLayout(jd_agregarUsuarioLayout);
        jd_agregarUsuarioLayout.setHorizontalGroup(
            jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_agregarUsuarioLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_crearUsuario)
                    .addComponent(chk_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_agregarUsuarioLayout.createSequentialGroup()
                        .addGroup(jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nuevoUsuarioContrasena)
                            .addComponent(txt_nuevoUsuarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jd_agregarUsuarioLayout.setVerticalGroup(
            jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_agregarUsuarioLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_nuevoUsuarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_agregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nuevoUsuarioContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(chk_admin)
                .addGap(18, 18, 18)
                .addComponent(btn_crearUsuario)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jd_informacionSistema.setTitle("Información del Sistema");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Información del Sistema");

        jLabel8.setText("<html>\n<div>\n    <b>MiniOS</b><br>\n    Versión: 1.0.0<br>\n    Última actualización: 11 de diciembre de 2024<br><br>\n    \n    Este sistema operativo ha sido diseñado para ofrecer una experiencia sencilla, intuitiva y eficiente.<br><br>\n    \n    <b>Desarrollado por:</b> Alejandro Castellanos\n</div>\n</html>");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Usuarios Registrados");

        jt_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jt_usuarios);

        btn_editarUsuario.setText("Editar usuario");
        btn_editarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_informacionSistemaLayout = new javax.swing.GroupLayout(jd_informacionSistema.getContentPane());
        jd_informacionSistema.getContentPane().setLayout(jd_informacionSistemaLayout);
        jd_informacionSistemaLayout.setHorizontalGroup(
            jd_informacionSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_informacionSistemaLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jd_informacionSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jd_informacionSistemaLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_editarUsuario))
                    .addGroup(jd_informacionSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jd_informacionSistemaLayout.setVerticalGroup(
            jd_informacionSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_informacionSistemaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jd_informacionSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_informacionSistemaLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btn_editarUsuario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_informacionSistemaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        jd_editarUsuario.setTitle("Editar Usuario");

        jLabel9.setText("Nombre de Usuario:");

        jLabel10.setText("Contraseña:");

        btn_guardarCambiosUsuario.setText("Guardar cambios");
        btn_guardarCambiosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarCambiosUsuarioActionPerformed(evt);
            }
        });

        btn_eliminarUsuario.setText("Eliminar Usuario");
        btn_eliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_editarUsuarioLayout = new javax.swing.GroupLayout(jd_editarUsuario.getContentPane());
        jd_editarUsuario.getContentPane().setLayout(jd_editarUsuarioLayout);
        jd_editarUsuarioLayout.setHorizontalGroup(
            jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_editarUsuarioLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_guardarCambiosUsuario)
                    .addGroup(jd_editarUsuarioLayout.createSequentialGroup()
                        .addGroup(jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nombreEditar)
                            .addComponent(txt_contrasenaEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                    .addComponent(btn_eliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jd_editarUsuarioLayout.setVerticalGroup(
            jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_editarUsuarioLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_nombreEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_editarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_contrasenaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_guardarCambiosUsuario)
                .addGap(18, 18, 18)
                .addComponent(btn_eliminarUsuario)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jmi_nuevoNodo.setText("Nuevo nodo");
        jmi_nuevoNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_nuevoNodoActionPerformed(evt);
            }
        });
        jpm_explorador.add(jmi_nuevoNodo);

        jmi_eliminarNodo.setText("Eliminar");
        jmi_eliminarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarNodoActionPerformed(evt);
            }
        });
        jpm_explorador.add(jmi_eliminarNodo);

        jmi_cambiarNombreNodo.setText("Cambiar nombre");
        jmi_cambiarNombreNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cambiarNombreNodoActionPerformed(evt);
            }
        });
        jpm_explorador.add(jmi_cambiarNombreNodo);

        jd_configuracionEscritorio.setTitle("Configuración del Sistema");

        jTabbedPane1.setOpaque(true);

        btn_guardarFuenteEscritorio.setText("Aceptar");
        btn_guardarFuenteEscritorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarFuenteEscritorioActionPerformed(evt);
            }
        });

        jLabel11.setText("Nombre de la fuente");

        jLabel12.setText("Estilo");

        jcb_estiloFuenteEscritorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Negrita", "Itálica" }));

        jLabel13.setText("Tamaño");

        btn_desktopColor.setText("Elegir el color de la fuente");
        btn_desktopColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_desktopColorActionPerformed(evt);
            }
        });

        jLabel14.setText("Color");

        btn_llenarDefaultFuente.setText("Valores predeterminados");
        btn_llenarDefaultFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_llenarDefaultFuenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_tamañoLetraEscritorio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nombreFuenteEscritorio)
                            .addComponent(jcb_estiloFuenteEscritorio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_desktopColor, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_llenarDefaultFuente, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_guardarFuenteEscritorio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_tamañoLetraEscritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombreFuenteEscritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_estiloFuenteEscritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_desktopColor)
                    .addComponent(jLabel14))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_llenarDefaultFuente)
                    .addComponent(btn_guardarFuenteEscritorio))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fuente", jPanel2);

        jLabel19.setText("Tema");

        btn_cambiarMenuBarColor.setText("Cambiar color de barras de menu");
        btn_cambiarMenuBarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cambiarMenuBarColorActionPerformed(evt);
            }
        });

        jLabel20.setText("Fondo de Pantalla");

        btn_cambiarFondoDePantalla.setText("Elegir imagen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(btn_cambiarMenuBarColor, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(btn_cambiarFondoDePantalla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cambiarMenuBarColor)
                .addGap(40, 40, 40)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cambiarFondoDePantalla)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tema", jPanel1);

        javax.swing.GroupLayout jd_configuracionEscritorioLayout = new javax.swing.GroupLayout(jd_configuracionEscritorio.getContentPane());
        jd_configuracionEscritorio.getContentPane().setLayout(jd_configuracionEscritorioLayout);
        jd_configuracionEscritorioLayout.setHorizontalGroup(
            jd_configuracionEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jd_configuracionEscritorioLayout.setVerticalGroup(
            jd_configuracionEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jd_configuracionEditor.setTitle("Configuración del Sistema");

        jLabel15.setText("Nombre de la fuente");

        jLabel16.setText("Estilo");

        jcb_estiloFuenteEditor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Negrita", "Itálica" }));

        jLabel17.setText("Tamaño");

        btn_llenarDefaultEditorFont.setText("Valores predeterminados");
        btn_llenarDefaultEditorFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_llenarDefaultEditorFontActionPerformed(evt);
            }
        });

        btn_guardarFuenteEditor.setText("Aceptar");
        btn_guardarFuenteEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarFuenteEditorActionPerformed(evt);
            }
        });

        btn_editorColor.setText("Elegir el color de la fuente");
        btn_editorColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editorColorActionPerformed(evt);
            }
        });

        jLabel18.setText("Color");

        javax.swing.GroupLayout jd_configuracionEditorLayout = new javax.swing.GroupLayout(jd_configuracionEditor.getContentPane());
        jd_configuracionEditor.getContentPane().setLayout(jd_configuracionEditorLayout);
        jd_configuracionEditorLayout.setHorizontalGroup(
            jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_configuracionEditorLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_configuracionEditorLayout.createSequentialGroup()
                        .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_tamañoLetraEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nombreFuenteEditor)
                            .addComponent(jcb_estiloFuenteEditor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_editorColor, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))
                    .addGroup(jd_configuracionEditorLayout.createSequentialGroup()
                        .addComponent(btn_llenarDefaultEditorFont, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_guardarFuenteEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jd_configuracionEditorLayout.setVerticalGroup(
            jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_configuracionEditorLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txt_tamañoLetraEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombreFuenteEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_estiloFuenteEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editorColor)
                    .addComponent(jLabel18))
                .addGap(35, 35, 35)
                .addGroup(jd_configuracionEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_llenarDefaultEditorFont)
                    .addComponent(btn_guardarFuenteEditor))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jd_loginLogout.setPreferredSize(new java.awt.Dimension(800, 550));

        lbl_iniciandoCerrando.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbl_iniciandoCerrando.setText("Cerrando Sesion...");

        lbl_loadUserInfo.setText("informacion del usuario...");

        javax.swing.GroupLayout jd_loginLogoutLayout = new javax.swing.GroupLayout(jd_loginLogout.getContentPane());
        jd_loginLogout.getContentPane().setLayout(jd_loginLogoutLayout);
        jd_loginLogoutLayout.setHorizontalGroup(
            jd_loginLogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_loginLogoutLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jd_loginLogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_iniciandoCerrando, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_loadUserInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jd_loginLogoutLayout.setVerticalGroup(
            jd_loginLogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_loginLogoutLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(lbl_iniciandoCerrando)
                .addGap(40, 40, 40)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_loadUserInfo)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 550));

        btn_login.setText("Iniciar Sesión");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Bienvenido");

        jLabel2.setText("Nombre de Usuario:");

        jLabel3.setText("Contraseña:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btn_login)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_loginUsuario)
                        .addComponent(txt_loginConstrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txt_loginUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_loginConstrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btn_login)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        String nombre = txt_loginUsuario.getText();
        String contrasena = txt_loginConstrasena.getText();

        // Si no hay nombre de usuario, salir
        if (nombre.isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "Por favor ingresa un nombre de usuario",
                    "Advertencia de Inicio de Sesión", JOptionPane.WARNING_MESSAGE
            );
            return;
        }
        /* Si el ArrayList de usuarios está vació es porque no hay usuarios
        registrados, por lo tanto, se debe crear el primero */
        if (usuarios.isEmpty()) {
            crearPrimerUsuario(nombre, contrasena);
        } else if (!usuarioValidado(nombre, contrasena)) {
            return;
        }
        loadDesktop(activeUser); // Cargar escritorio del usuario
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_abrirEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrirEditorActionPerformed
        // Si ya hay una instancia del editor abierta, mostrarla
        if (jd_editor.isVisible()) {
            jd_editor.toFront();
        } else {
            jd_editor.pack();
            jd_editor.setLocationRelativeTo(jd_escritorio);
            jd_editor.setVisible(true);
            txt_editor.setText("");
            this.currentTextFile = null;
            this.contenidoGuardado = "";
        }
    }//GEN-LAST:event_btn_abrirEditorActionPerformed

    private void jmi_abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_abrirArchivoActionPerformed
        this.currentTextFile = selectFile();
        if (currentTextFile != null) {
            String fileContent = getFileText(currentTextFile);
            txt_editor.setText(fileContent);
            this.contenidoGuardado = fileContent;
        }
    }//GEN-LAST:event_jmi_abrirArchivoActionPerformed

    private void jmi_guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_guardarArchivoActionPerformed
        saveFile(currentTextFile, txt_editor.getText());
    }//GEN-LAST:event_jmi_guardarArchivoActionPerformed

    private void jmi_guardarArchivoComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_guardarArchivoComoActionPerformed
        saveFileAs(txt_editor.getText());
    }//GEN-LAST:event_jmi_guardarArchivoComoActionPerformed

    private void jmi_informacionEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_informacionEditorActionPerformed
        JOptionPane.showMessageDialog(jd_editor,
                TEXT_EDITOR_ABOUT, "Acerca del Editor", JOptionPane.INFORMATION_MESSAGE
        );
    }//GEN-LAST:event_jmi_informacionEditorActionPerformed

    private void jd_editorWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_editorWindowClosing
        /* Hacerle saber al usuario si el docuemento no ha sido guardado. Esto
        se da en dos casos:
        1. Si nunca hubo un archivo abierto
        2. El archivo abierto se editó pero no se guardó */
        int opcion = JOptionPane.DEFAULT_OPTION;
        if (!txt_editor.getText().equals(contenidoGuardado)) {
            opcion = JOptionPane.showConfirmDialog(jd_editor,
                    "Tiene cambios sin guardar. ¿Desea guardar antes de salir?",
                    "Advertencia",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE
            );
        }
        if (opcion == JOptionPane.YES_OPTION) {
            saveFile(currentTextFile, txt_editor.getText()); // No hay archivo seleccionado
            jd_editor.dispose();
        } else {
            jd_editor.dispose();
        }
    }//GEN-LAST:event_jd_editorWindowClosing

    private void jmi_cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cerrarSesionActionPerformed
        lbl_iniciandoCerrando.setText("Cerrando Sesión...");
        jd_loginLogout.pack();
        jd_loginLogout.setLocationRelativeTo(this);
        jd_loginLogout.setVisible(true);
        jd_escritorio.dispose();
        runProgressBar(activeUser, this);
    }//GEN-LAST:event_jmi_cerrarSesionActionPerformed

    private void jmi_agregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarUsuarioActionPerformed
        jd_agregarUsuario.pack();
        jd_agregarUsuario.setLocationRelativeTo(jd_escritorio);
        txt_nuevoUsuarioNombre.setText("");
        txt_nuevoUsuarioContrasena.setText("");
        chk_admin.setSelected(false);
        jd_agregarUsuario.setVisible(true);
    }//GEN-LAST:event_jmi_agregarUsuarioActionPerformed

    private void btn_crearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_crearUsuarioActionPerformed
        String nombre = txt_nuevoUsuarioNombre.getText();
        String contrasena = txt_nuevoUsuarioContrasena.getText();
        if (nombre.isBlank()) {
            JOptionPane.showMessageDialog(jd_agregarUsuario,
                    "El usuario debe tener un nombre.", "Advertencia",
                    JOptionPane.WARNING_MESSAGE
            );
        } else if (!isValidUsername(nombre)) {
            JOptionPane.showMessageDialog(jd_agregarUsuario,
                    "El nombre de usuario ya ha sido utilizado", "Advertencia",
                    JOptionPane.WARNING_MESSAGE
            );
        } else {
            usuarios.add(new Usuario(nombre, contrasena, chk_admin.isSelected()));
            saveUserFile();
            jd_agregarUsuario.dispose();
            JOptionPane.showMessageDialog(jd_agregarUsuario,
                    "El usuario se ha creado con éxito!", "Agregar Usuario",
                    JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_btn_crearUsuarioActionPerformed

    private void jd_escritorioWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_escritorioWindowClosing
        /* Si el usuario cierra el escritorio, guardar la configuración de los
        usuarios (porque se cerró inesperadamente) y terminar el programa */
        saveUserFile();
        System.exit(0);
    }//GEN-LAST:event_jd_escritorioWindowClosing

    private void jmi_infoSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_infoSistemaActionPerformed
        llenarUserTable();
        jd_informacionSistema.pack();
        jd_informacionSistema.setLocationRelativeTo(jd_escritorio);
        jd_informacionSistema.setVisible(true);
    }//GEN-LAST:event_jmi_infoSistemaActionPerformed

    private void btn_editarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarUsuarioActionPerformed
        /* Nota: Los administradores pueden modificar y eliminar invitados pero
        no pueden modificar o editar a otros administradores.
        Los invitados solo pueden editar sus propias cuentas. */
        int filaSeleccionada = jt_usuarios.getSelectedRow();
        if (filaSeleccionada == -1) { // Si no hay un usuario seleccionado, salir
            return;
        }
        // Obtener el usuario seleccionado
        this.usuarioAEditar = usuarios.get(filaSeleccionada);
        if ((activeUser.isAdmin() && !usuarioAEditar.isAdmin())
                || activeUser == usuarioAEditar) {
            jd_editarUsuario.pack();
            jd_editarUsuario.setLocationRelativeTo(jd_informacionSistema);
            txt_nombreEditar.setText(usuarioAEditar.getNombre());
            txt_contrasenaEditar.setText(usuarioAEditar.getContrasena());
            jd_editarUsuario.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(jd_informacionSistema,
                    "No tiene los permisos para editar a este usuario",
                    "Editar Usuario", JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_btn_editarUsuarioActionPerformed

    private void btn_guardarCambiosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarCambiosUsuarioActionPerformed
        String nuevoNombre = txt_nombreEditar.getText();
        String nuevaContrasena = txt_contrasenaEditar.getText();
        if (nuevoNombre.isBlank()) {
            JOptionPane.showMessageDialog(jd_editarUsuario,
                    "No puede dejar el nombre del Usuario en blanco."
                    + "\nPor favor ingrese un nombre de usuario",
                    "Editar Usuario", JOptionPane.WARNING_MESSAGE
            );
        } else {
            usuarioAEditar.setNombre(nuevoNombre);
            usuarioAEditar.setContrasena(nuevaContrasena);
            JOptionPane.showMessageDialog(jd_editarUsuario,
                    "Usuario actualizado correctamente!", "Editar Usuario",
                    JOptionPane.INFORMATION_MESSAGE
            );
            saveUserFile();
            llenarUserTable();
        }
    }//GEN-LAST:event_btn_guardarCambiosUsuarioActionPerformed

    private void btn_eliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarUsuarioActionPerformed
        int opcion = JOptionPane.showConfirmDialog(jd_editor,
                "Esta accion eliminará a " + usuarioAEditar.getNombre()
                + ". ¿Desea continuar?", "Advertencia",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE
        );
        if (opcion == JOptionPane.YES_OPTION) {
            usuarios.remove(usuarioAEditar);
            saveUserFile();
            llenarUserTable();
            jd_editarUsuario.dispose();
            JOptionPane.showMessageDialog(null, "Usuario eliminado con exito",
                    "Eliminar Usuario", JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_btn_eliminarUsuarioActionPerformed

    private void btn_abrirExploradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrirExploradorActionPerformed
        fileTreeModel.reload(); // Colapsar carpetas
        jd_explorador.pack();
        jd_explorador.setLocationRelativeTo(jd_escritorio);
        jd_explorador.setVisible(true);
    }//GEN-LAST:event_btn_abrirExploradorActionPerformed

    private void jt_exploradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_exploradorMouseClicked
        TreePath path = jt_explorador.getPathForLocation(evt.getX(), evt.getY());
        if (path == null) {
            manejarClickEspacioBlanco(evt);
        } else if (evt.getClickCount() == 2) {
            cambiarNombreNodo(path);
        } else if (SwingUtilities.isRightMouseButton(evt)) {
            manejarClickDerecho(path, evt);
        }
    }//GEN-LAST:event_jt_exploradorMouseClicked

    private void jmi_nuevoNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_nuevoNodoActionPerformed
        nuevoNodo();
    }//GEN-LAST:event_jmi_nuevoNodoActionPerformed

    private void jmi_eliminarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarNodoActionPerformed
        selectedNode.removeFromParent();
        reloadMantainingTreeState();
    }//GEN-LAST:event_jmi_eliminarNodoActionPerformed

    private void jmi_cambiarNombreNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cambiarNombreNodoActionPerformed
        TreePath path = new TreePath(selectedNode.getPath());
        cambiarNombreNodo(path);
    }//GEN-LAST:event_jmi_cambiarNombreNodoActionPerformed

    private void jmi_nuevoNodo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_nuevoNodo1ActionPerformed
        TreePath path = jt_explorador.getSelectionPath();
        if (path == null) {
            this.selectedNode = (DefaultMutableTreeNode) fileTreeModel.getRoot();
        } else {
            this.selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
        }
        nuevoNodo();
    }//GEN-LAST:event_jmi_nuevoNodo1ActionPerformed

    private void jmi_cambiarNombreNodo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cambiarNombreNodo1ActionPerformed
        TreePath path = jt_explorador.getSelectionPath();
        if (path == null) {
            this.selectedNode = (DefaultMutableTreeNode) fileTreeModel.getRoot();
        } else {
            this.selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
        }
        cambiarNombreNodo(path);
    }//GEN-LAST:event_jmi_cambiarNombreNodo1ActionPerformed

    private void jmi_eliminarNodo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarNodo1ActionPerformed
        TreePath path = jt_explorador.getSelectionPath();
        if (path != null) {
            this.selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
            selectedNode.removeFromParent();
            reloadMantainingTreeState();
        }
    }//GEN-LAST:event_jmi_eliminarNodo1ActionPerformed

    private void jd_exploradorWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_exploradorWindowClosing
        saveUserFile(); // Guardar cambios cuando se cierre el explorador
    }//GEN-LAST:event_jd_exploradorWindowClosing

    private void jmi_configurarSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_configurarSistemaActionPerformed
        jd_configuracionEscritorio.pack();
        jd_configuracionEscritorio.setLocationRelativeTo(jd_escritorio);

        // Mostrar en pantalla los valores actuales de la fuente
        Font font = activeUser.getConfig().getFuenteEscritorio();
        txt_tamañoLetraEscritorio.setText(font.getSize() + "");
        txt_nombreFuenteEscritorio.setText(font.getFontName());
        switch (font.getStyle()) {
            case Font.PLAIN ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(0);
            case Font.BOLD ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(1);
            case Font.ITALIC ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(2);
        }
        this.selectedDesktopColor = activeUser.getConfig().getDesktopFontColor();
        jd_configuracionEscritorio.setVisible(true);
    }//GEN-LAST:event_jmi_configurarSistemaActionPerformed

    private void btn_llenarDefaultEditorFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_llenarDefaultEditorFontActionPerformed
        Font font = Configuracion.DEFAULT_EDITOR_FONT;
        txt_tamañoLetraEditor.setText(font.getSize() + "");
        txt_nombreFuenteEditor.setText(font.getFontName());
        jcb_estiloFuenteEditor.setSelectedIndex(0); // Plain
        this.selectedEditorColor = Configuracion.DEFAULT_FONT_COLOR;
    }//GEN-LAST:event_btn_llenarDefaultEditorFontActionPerformed

    private void btn_guardarFuenteEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarFuenteEditorActionPerformed
        Font font = new Font(
                txt_nombreFuenteEditor.getText(), // Tipografía
                switch (jcb_estiloFuenteEditor.getSelectedIndex()) { // Estilo
            case 1 ->
                Font.BOLD;
            case 2 ->
                Font.ITALIC;
            default ->
                Font.PLAIN;
        },
                Integer.parseInt(txt_tamañoLetraEditor.getText()) // Tamaño
        );
        txt_editor.setFont(font);
        txt_editor.setForeground(selectedEditorColor);
        JOptionPane.showMessageDialog(jd_configuracionEditor, "Fuente modificada exitosamente",
                "Cambiar Fuente", JOptionPane.INFORMATION_MESSAGE
        );
        activeUser.getConfig().setFuenteEditor(font);
        activeUser.getConfig().setEditorFontColor(selectedEditorColor);
        saveUserFile();
    }//GEN-LAST:event_btn_guardarFuenteEditorActionPerformed

    private void btn_editorColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editorColorActionPerformed
        this.selectedEditorColor = JColorChooser.showDialog(jd_configuracionEditor,
                "Seleccione el color de la letra", Color.BLACK
        );
    }//GEN-LAST:event_btn_editorColorActionPerformed

    private void jmi_fuenteEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_fuenteEditorActionPerformed
        jd_configuracionEditor.pack();
        jd_configuracionEditor.setLocationRelativeTo(jd_editor);

        // Mostrar en pantalla los valores actuales de la fuente
        Font font = activeUser.getConfig().getFuenteEditor();
        txt_tamañoLetraEditor.setText(font.getSize() + "");
        txt_nombreFuenteEditor.setText(font.getFontName());
        switch (font.getStyle()) {
            case Font.PLAIN ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(0);
            case Font.BOLD ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(1);
            case Font.ITALIC ->
                jcb_estiloFuenteEscritorio.setSelectedIndex(2);
        }
        this.selectedEditorColor = activeUser.getConfig().getEditorFontColor();
        jd_configuracionEditor.setVisible(true);
    }//GEN-LAST:event_jmi_fuenteEditorActionPerformed

    private void btn_llenarDefaultFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_llenarDefaultFuenteActionPerformed
        Font font = Configuracion.DEFAULT_DESKTOP_FONT;
        txt_tamañoLetraEscritorio.setText(font.getSize() + "");
        txt_nombreFuenteEscritorio.setText(font.getFontName());
        jcb_estiloFuenteEscritorio.setSelectedIndex(0); // Plain
        this.selectedDesktopColor = Configuracion.DEFAULT_FONT_COLOR;
    }//GEN-LAST:event_btn_llenarDefaultFuenteActionPerformed

    private void btn_desktopColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_desktopColorActionPerformed
        this.selectedDesktopColor = JColorChooser.showDialog(jd_configuracionEscritorio,
                "Seleccione el color de la letra", Color.BLACK
        );
    }//GEN-LAST:event_btn_desktopColorActionPerformed

    private void btn_guardarFuenteEscritorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarFuenteEscritorioActionPerformed
        Font font = new Font(
                txt_nombreFuenteEscritorio.getText(), // Tipografía
                switch (jcb_estiloFuenteEscritorio.getSelectedIndex()) { // Estilo
            case 1 ->
                Font.BOLD;
            case 2 ->
                Font.ITALIC;
            default ->
                Font.PLAIN;
        },
                Integer.parseInt(txt_tamañoLetraEscritorio.getText()) // Tamaño
        );

        setDesktopFont(font, selectedDesktopColor);
        jt_explorador.updateUI();// Refresca la fuente en el JTree
        JOptionPane.showMessageDialog(jd_configuracionEscritorio, "Fuente modificada exitosamente",
                "Cambiar Fuente", JOptionPane.INFORMATION_MESSAGE
        );
        activeUser.getConfig().setFuenteEscritorio(font);
        activeUser.getConfig().setDesktopFontColor(selectedDesktopColor);
        saveUserFile();
    }//GEN-LAST:event_btn_guardarFuenteEscritorioActionPerformed

    private void btn_cambiarMenuBarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cambiarMenuBarColorActionPerformed
        Color color = JColorChooser.showDialog(jd_configuracionEscritorio,
                "Seleccione el color de las barras de menu", Color.WHITE
        );
        jTabbedPane1.setBackground(color);
        setAllMenuBarsColor(color);
        activeUser.getConfig().setMenuBarColor(color);
        saveUserFile();
    }//GEN-LAST:event_btn_cambiarMenuBarColorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Pantalla().setVisible(true);
        });
    }

    // ========== Helper Methods ==========
    private File selectFile() {
        JFileChooser fileChooser = new JFileChooser();
        int estado = fileChooser.showSaveDialog(jd_editor);
        /* Nota: si el estado no es JFileChooser.APPROVE_OPTION puede ser que el
        usuario haya cancelado o que haya ocurrido un error. Salir. */
        if (estado == JFileChooser.APPROVE_OPTION) {
            return fileChooser.getSelectedFile();
        } else {
            return null;
        }
    }

    // ---------- Archivos Binarios ----------
    private ArrayList<Usuario> loadUserFile() {
        File file = new File(CONFIG_FILE_PATH);
        try {
            // Comenzar con la lectura del archivo
            FileInputStream fi = new FileInputStream(file);
            ObjectInputStream objectReader = new ObjectInputStream(fi);
            Object obj = objectReader.readObject();
            return (ArrayList<Usuario>) obj;
        } catch (IOException | ClassNotFoundException e) {
        }
        return new ArrayList(); // No encontró nada en el archivo binario
    }

    private void saveUserFile() {
        File file = new File(CONFIG_FILE_PATH);
        try {
            // Escritura del archivo
            FileOutputStream os = new FileOutputStream(file);
            ObjectOutputStream objectWriter = new ObjectOutputStream(os);
            objectWriter.writeObject(usuarios);
            System.out.println("User file saved");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error");
        }
    }

    private Usuario getUser(String nombre, String contrasena) {
        for (Usuario usuario : usuarios) {
            if (usuario.getNombre().equals(nombre)
                    && usuario.getContrasena().equals(contrasena)) {
                return usuario;
            }
        }
        return null; // No encotró al usuario
    }

    private Usuario getUser(String nombre) {
        for (Usuario usuario : usuarios) {
            if (usuario.getNombre().equals(nombre)) {
                return usuario;
            }
        }
        return null; // No encotró al usuario
    }

    // ---------- Archivos de Texto ----------
    private String getFileText(File file) {
        try {
            String texto = "";
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String linea;
                while ((linea = br.readLine()) != null) {
                    texto += linea + "\n";
                }
            }
            return texto.stripTrailing();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(jd_editor,
                    "El archivo no se encontró.", "Error", JOptionPane.ERROR_MESSAGE
            );
            Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
            return "";
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(jd_editor,
                    "Error al leer el archivo.", "Error", JOptionPane.ERROR_MESSAGE
            );
            Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
            return "";
        }
    }

    private void writeFile(File file, String text) {
        try {
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(file, false))) {
                bw.write(text);
            }
            JOptionPane.showMessageDialog(jd_editor, "Se guardó el archivo.",
                    "Información", JOptionPane.INFORMATION_MESSAGE
            );
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(jd_editor,
                    "Algo salió mal. Error al escribir el archivo.", "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void saveFile(File file, String text) {
        /* Si no hay un archivo abierto, se le pide al usuario guardar el
        archivo actual como un archivo nuevo */
        if (currentTextFile == null) {
            saveFileAs(text);
        } else {
            // Escribir el contendio del textArea en el archivo seleccionado
            writeFile(file, text);
            this.contenidoGuardado = text; // Log del último texto guardado
        }
    }

    private void saveFileAs(String text) {
        this.currentTextFile = selectFile();
        if (currentTextFile != null) {
            saveFile(currentTextFile, text);
        }
    }

    // ---------- Explorador de Archivos ----------
    private void manejarClickEspacioBlanco(java.awt.event.MouseEvent evt) {
        jt_explorador.clearSelection(); // Quitar selección si algiuna
        if (SwingUtilities.isRightMouseButton(evt)) {
            // Solo mostrar la opción de Crear nodo
            jmi_cambiarNombreNodo.setVisible(false);
            jmi_eliminarNodo.setVisible(false);
            jpm_explorador.show(jt_explorador, evt.getX(), evt.getY());
            this.selectedNode = (DefaultMutableTreeNode) fileTreeModel.getRoot();
        }
    }

    private void manejarClickDerecho(TreePath path, java.awt.event.MouseEvent evt) {
        jt_explorador.setSelectionPath(path); // Seleccionar el nodo
        jmi_cambiarNombreNodo.setVisible(true);
        jmi_eliminarNodo.setVisible(true);
        jpm_explorador.show(jt_explorador, evt.getX(), evt.getY());
        this.selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
    }

    private void nuevoNodo() {
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode("Nuevo nodo");
        selectedNode.add(newNode);
        TreePath path = new TreePath(newNode.getPath());
        reloadMantainingTreeState();
        cambiarNombreNodo(path);
    }

    private void reloadMantainingTreeState() {
        /* Este método hace un reload guardando primero el estado del expanded
        paths del árbol, así las carpetas abiertas siguen abiertas.
        Source: https://tinyurl.com/5xcc34rx (Stack Overflow) */
        ArrayList<TreePath> expanded = new ArrayList<>();
        for (int i = 0; i < jt_explorador.getRowCount(); i++) {
            TreePath currPath = jt_explorador.getPathForRow(i);
            if (i + 1 < jt_explorador.getRowCount()) {
                TreePath nextPath = jt_explorador.getPathForRow(i + 1);
                if (currPath != null && currPath.isDescendant(nextPath)) {
                    expanded.add(currPath);
                }
            }
        }
        // Reload modelo and restaurar expanded paths
        fileTreeModel.reload();
        for (TreePath path : expanded) {
            jt_explorador.expandPath(path);
        }
    }

    private void cambiarNombreNodo(TreePath path) {
        jt_explorador.setEditable(true);
        jt_explorador.startEditingAtPath(path);
    }

    // ---------- Inicio de Sesión ----------
    private void crearPrimerUsuario(String nombre, String contrasena) {
        Usuario usuario = new Usuario(nombre, contrasena, true);
        this.activeUser = usuario;
        usuarios.add(usuario);
        saveUserFile();
        JOptionPane.showMessageDialog(this, "¡Bienvenido! \n\n"
                + "Tu usuario ha sido creado con éxito.\n"
                + "¡Gracias por unirte a nuestra plataforma "
                + activeUser.getNombre() + "!", "Primer Usuario",
                JOptionPane.INFORMATION_MESSAGE
        );
    }

    private boolean usuarioValidado(String nombre, String contrasena) {
        this.activeUser = getUser(nombre, contrasena);
        if (activeUser == null) {
            JOptionPane.showMessageDialog(this, "No se pudo iniciar sesión.\n"
                    + "El nombre de usuario o la contraseña que ingresaste"
                    + " no son correctos.", "Error de Inicio de Sesión",
                    JOptionPane.ERROR_MESSAGE
            );
            return false;
        } else {
            JOptionPane.showMessageDialog(this,
                    "¡Hola de nuevo, " + activeUser.getNombre() + "!\n"
                    + "Nos alegra verte de vuelta. ¡Que tengas un gran día!",
                    "Bienvenido", JOptionPane.INFORMATION_MESSAGE
            );
            return true;
        }
    }

    private boolean isValidUsername(String nombre) {
        for (Usuario usuario : usuarios) {
            if (usuario.getNombre().equals(nombre)) {
                return false;
            }
        }
        return true; // Nombre disponible
    }

    // ---------- Configuración de Fuentes y Colores ----------
    private void setDesktopFont(Font font, Color color) {
        changeFont(jd_agregarUsuario, font, color);
        changeFont(jd_configuracionEditor, font, color);
        changeFont(jd_configuracionEscritorio, font, color);
        changeFont(jd_editarUsuario, font, color);
        changeFont(jd_editor, font, color);
        changeFont(jd_escritorio, font, color);
        changeFont(jd_explorador, font, color);
        changeFont(jd_informacionSistema, font, color);

        // No modificar la fuente del editor de texto
        txt_editor.setForeground(activeUser.getConfig().getEditorFontColor());
        txt_editor.setFont(activeUser.getConfig().getFuenteEditor());
        txt_editor.setForeground(activeUser.getConfig().getEditorFontColor());
    }

    private void changeFont(Component component, Font font, Color color) {
        /* Método recursivo para cambiar todas las fuentes de un msimo componente
        Adaptado de: https://tinyurl.com/bdd9uefe (Stack Overflow) */
        component.setFont(font);
        component.setForeground(color);
        if (component instanceof JMenu menu) {
            for (int i = 0; i < menu.getItemCount(); i++) {
                JMenuItem menuItem = menu.getItem(i);
                if (menuItem != null) { // Avoid null menu items
                    changeFont(menuItem, font, color);
                }
            }
        } else if (component instanceof Container container) {
            for (Component child : container.getComponents()) {
                changeFont(child, font, color);
            }
        }
    }

    private void setAllMenuBarsColor(Color color) {
        jMenu1.setBackground(color);
        jMenu2.setBackground(color);
        jMenu3.setBackground(color);
        jMenu4.setBackground(color);
        jMenu5.setBackground(color);
        jMenu6.setBackground(color);
    }

    // ---------- Carga de Configuración ----------
    private void loadDesktop(Usuario usuario) {
        // Preparar escritorio
        jd_escritorio.pack();
        jd_escritorio.setLocationRelativeTo(this);
        jd_escritorio.setTitle("MiniOS — " + usuario.getNombre());

        jd_loginLogout.pack();
        jd_loginLogout.setLocationRelativeTo(this);
        jd_loginLogout.setVisible(true);
        lbl_iniciandoCerrando.setText("Iniciando Sesión...");
        runProgressBar(usuario, jd_escritorio); // Mostrar escritorio cuando termine

        // Ocultar login screen
        txt_loginUsuario.setText("");
        txt_loginConstrasena.setText("");
        this.dispose(); // Cerrar ventana de login

        // Cargar modelo
        this.fileTreeModel = new DefaultTreeModel(usuario.getRaiz());
        jt_explorador.setModel(fileTreeModel);

        // Elementos que cambian dependiendo del tipo de usuario
        if (usuario.isAdmin()) {
            jmi_agregarUsuario.setVisible(true);
        } else {
            jmi_agregarUsuario.setVisible(false);
        }

        // Cargar colores y tipo de fuente
        setDesktopFont(
                usuario.getConfig().getFuenteEscritorio(),
                usuario.getConfig().getDesktopFontColor()
        );
        setAllMenuBarsColor(usuario.getConfig().getMenuBarColor());
    }

    private void llenarUserTable() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Tipo");

        String nombre;
        String tipo;
        for (Usuario usuario : usuarios) {
            nombre = usuario.nombre;
            if (usuario.isAdmin()) {
                tipo = "Administrador";
            } else {
                tipo = "Invitado";
            }
            // Indicar cuál es el usuario actual
            if (usuario == activeUser) {
                modelo.addRow(new Object[]{nombre + " (sesión actual)", tipo});
            } else {
                modelo.addRow(new Object[]{nombre, tipo});
            }
        }
        jt_usuarios.setModel(modelo);
    }

    private void runProgressBar(Usuario usuario, Component siguienteComponente) {
        String[] infoList = usuario.getInfoList();
        Thread thread = new Thread(() -> {
            int totalItems = infoList.length;
            for (int i = 0; i < totalItems; i++) {
                final int index = i; // Necesario por la función lambda
                int progreso = (int) (((i + 1) / (double) totalItems) * 100);
                SwingUtilities.invokeLater(() -> {
                    jProgressBar1.setValue(progreso);
                    lbl_loadUserInfo.setText(infoList[index]);
                });
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                }
            }
            siguienteComponente.setVisible(true);
            jd_loginLogout.dispose();
        });
        thread.start();
    }

    // ---------- Variables Globales ----------
    private ArrayList<Usuario> usuarios;
    private Usuario activeUser;
    private Usuario usuarioAEditar;
    private File currentTextFile;
    private String contenidoGuardado;
    private DefaultTreeModel fileTreeModel;
    private Color selectedDesktopColor;
    private Color selectedEditorColor;
    private DefaultMutableTreeNode selectedNode;
    private static final String CONFIG_FILE_PATH = "./data/users.dat";
    private static final String TEXT_EDITOR_ABOUT = "Este editor de texto ha sido"
            + "desarrollado por Alejandro\n"
            + "Castellanos como parte de un proyecto educativo.\n\n"
            + "Ofrece funcionalidades básicas para abrir, editar y guardar\n"
            + "archivos, además de una interfaz sencilla y eficiente.\n\n"
            + "¡Gracias por usarlo!";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_abrirEditor;
    private javax.swing.JButton btn_abrirExplorador;
    private javax.swing.JButton btn_cambiarFondoDePantalla;
    private javax.swing.JButton btn_cambiarMenuBarColor;
    private javax.swing.JButton btn_crearUsuario;
    private javax.swing.JButton btn_desktopColor;
    private javax.swing.JButton btn_editarUsuario;
    private javax.swing.JButton btn_editorColor;
    private javax.swing.JButton btn_eliminarUsuario;
    private javax.swing.JButton btn_guardarCambiosUsuario;
    private javax.swing.JButton btn_guardarFuenteEditor;
    private javax.swing.JButton btn_guardarFuenteEscritorio;
    private javax.swing.JButton btn_llenarDefaultEditorFont;
    private javax.swing.JButton btn_llenarDefaultFuente;
    private javax.swing.JButton btn_login;
    private javax.swing.JCheckBox chk_admin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcb_estiloFuenteEditor;
    private javax.swing.JComboBox<String> jcb_estiloFuenteEscritorio;
    private javax.swing.JDialog jd_agregarUsuario;
    private javax.swing.JDialog jd_configuracionEditor;
    private javax.swing.JDialog jd_configuracionEscritorio;
    private javax.swing.JDialog jd_editarUsuario;
    private javax.swing.JDialog jd_editor;
    private javax.swing.JDialog jd_escritorio;
    private javax.swing.JDialog jd_explorador;
    private javax.swing.JDialog jd_informacionSistema;
    private javax.swing.JDialog jd_loginLogout;
    private javax.swing.JMenuItem jmi_abrirArchivo;
    private javax.swing.JMenuItem jmi_agregarUsuario;
    private javax.swing.JMenuItem jmi_cambiarNombreNodo;
    private javax.swing.JMenuItem jmi_cambiarNombreNodo1;
    private javax.swing.JMenuItem jmi_cerrarSesion;
    private javax.swing.JMenuItem jmi_configurarSistema;
    private javax.swing.JMenuItem jmi_eliminarNodo;
    private javax.swing.JMenuItem jmi_eliminarNodo1;
    private javax.swing.JMenuItem jmi_fuenteEditor;
    private javax.swing.JMenuItem jmi_guardarArchivo;
    private javax.swing.JMenuItem jmi_guardarArchivoComo;
    private javax.swing.JMenuItem jmi_infoSistema;
    private javax.swing.JMenuItem jmi_informacionEditor;
    private javax.swing.JMenuItem jmi_nuevoNodo;
    private javax.swing.JMenuItem jmi_nuevoNodo1;
    private javax.swing.JPopupMenu jpm_explorador;
    private javax.swing.JTree jt_explorador;
    private javax.swing.JTable jt_usuarios;
    private javax.swing.JLabel lbl_iniciandoCerrando;
    private javax.swing.JLabel lbl_loadUserInfo;
    private javax.swing.JTextField txt_contrasenaEditar;
    private javax.swing.JTextArea txt_editor;
    private javax.swing.JTextField txt_loginConstrasena;
    private javax.swing.JTextField txt_loginUsuario;
    private javax.swing.JTextField txt_nombreEditar;
    private javax.swing.JTextField txt_nombreFuenteEditor;
    private javax.swing.JTextField txt_nombreFuenteEscritorio;
    private javax.swing.JTextField txt_nuevoUsuarioContrasena;
    private javax.swing.JTextField txt_nuevoUsuarioNombre;
    private javax.swing.JTextField txt_tamañoLetraEditor;
    private javax.swing.JTextField txt_tamañoLetraEscritorio;
    // End of variables declaration//GEN-END:variables
}
